// Generated by CoffeeScript 1.10.0
(function() {
  var Asset, BaseChild,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BaseChild = require('./base_child');

  Asset = (function(superClass) {
    extend(Asset, superClass);

    Asset.prototype.parent = '/themes';

    Asset.prototype.child = '/assets';

    Asset.prototype.slug = 'asset';

    function Asset(site) {
      Asset.__super__.constructor.call(this, site);
    }

    Asset.prototype.create = function(parentId, fields, callback) {
      var url;
      url = this.resource.queryString(this.prefix + "/" + parentId + this.child);
      return this.resource.put(url, this.slug, fields, callback);
    };

    Asset.prototype.update = Asset.prototype.create;

    Asset.prototype.get = function(parentId, params, callback) {
      var url;
      params.asset || (params.asset = {
        key: params.key
      });
      delete params.key;
      url = this.resource.queryString(this.prefix + "/" + parentId + this.child, params);
      return this.resource.get(url, this.slug, callback);
    };

    Asset.prototype["delete"] = function(parentId, key, callback) {
      var url;
      url = this.resource.queryString(this.prefix + "/" + parentId + this.child, {
        asset: {
          key: key
        }
      });
      return this.resource["delete"](url, key, callback);
    };

    return Asset;

  })(BaseChild);

  module.exports = Asset;

}).call(this);
